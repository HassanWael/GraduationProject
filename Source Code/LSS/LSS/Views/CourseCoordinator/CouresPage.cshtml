@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")
@using LSS.Models
@model LSS.Models.CoursesModelView.CouresModelView
@using LSS.Models.CoursesModelView

@{
    ViewBag.Title = Model.Course.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/coursepage.css" rel="stylesheet" type="text/css" />

<nav class="navbar navbar-expand-lg navbar-light  " style="border:0px;">

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="navbar-collapse collapse" id="navbarSupportedContent">
        <ul class="nav navbar-nav mr-auto">
            <li class="nav-item">
                @Html.ActionLink("previous Recomandation for improving the course", "ActionsForImproving", "CourseCoordinator", new { courseId = Model.Course.ID }, new { @class = "btn btn-secondary" })
            </li>
            <li class="nav-item dropdown show">
                <a class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="true">Forms</a>
                <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 44px, 0px);">
                    @Html.ActionLink("Coures Syllabus", "CourseSyllabus", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Course Assessment Survey", "CourseAssessmentSurvey", "CourseCoordinator", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Course File Checklist", "CourseFileChecklist", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Course Information Form ", "CourseInformationForm", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Coures Report", "CourseReport", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Exam Evaluation", "ExamEvaluation", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Question Answer Sheet", "QuestionsAnswersSheet", "Forms", new { courseId = Model.Course.ID }, new { @class = "dropdown-item" })
                </div>
            </li>
            <li> Upload Course Assessment Survey Result </li>
            <li>Upload Exam Results </li>
        </ul>
    </div>
</nav>



<div class="block">

    <div class="block-item" style="margin-right:30px; width:auto; ">
        <table class="table-active" style="width:100%; border: 1px solid gray">
            <tr style="margin-left:auto; margin-right:auto;">   <th scope="row" colspan="2" style="text-align:center;"> <p> Course Information </p>  </th></tr>
            <tr style=" text-align:center;"> <td>   <h4> Coures Title </h4>  </td> <td> @Model.Course.Title </td></tr>
            <tr style=" text-align:center;"> <td>    <h4> Coures ID </h4>  </td> <td>  @Model.Course.ID </td></tr>
            <tr style="text-align:center;"> <td>   <h4> Faculty Name   </h4> </td> <td> @Model.Faculty.ID </td></tr>
            <tr style=" text-align:center;"> <td>   <h4> Credit Hours   </h4> </td> <td> @Model.Course.Hours </td></tr>
            <tr style=" text-align:center;"> <td>   <h4> Course Coordinator   </h4> </td> <td> @Model.CourseCoordinator.Coordinator </td></tr>
            <tr style=" text-align:center;"> <td>   <h4> day time  </h4> </td> <td> @Model.CourseCoordinator.DayTime </td></tr>
        </table>
    </div>

    <div class="block-item" style="width:auto;">
        <h2>Course Text Books </h2>
        <table class="table-hover" style="width:97%">
            <tr class="table-primary">   <th> <h4> Title </h4></th> <th><h4> Author </h4></th> <th><h4> Year of Publish   </h4> </th> <th><h4> City/State</h4></th>  <th><h4> publisher </h4></th></tr>
            @foreach (CourseTextBook book in Model.CourseTextBooks)
            {
                <tr>  <td> @book.Book_Title </td>  <td> @book.Author</td><td> @book.YearOfpublish </td> <td> @book.City_State </td> <td>@book.Publisher</td></tr>
            }
        </table>
    </div>
</div>


<br />
<hr />



<div class="block-item">
    <h5 style="text-align:center;">Clo :</h5>
    <ol>
        @foreach (CLO clo in Model.CLOs)
        {
            <li>
                <b style=" float:left; text-align: left;">
                    @clo.Description
                </b>
                <div>
                    @Html.ActionLink("Delete ", "DeleteCLO", new { id = clo.ID })
                </div>
            </li>
        }

    </ol>


</div>

<div id="addCLO" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @{
                Html.RenderPartial("AddCLO", new AddCLOMV(Model.Course.ID));
            }
        </div>
    </div>
</div>
<button id='open' class="btn btn-outline-primary" data-toggle="modal" data-target="#addCLO">Add Course Learning outcome</button>


@if (Model.SLO_PI != null)
{
    <div class="block-item" style="width:auto;">
        <table class="table-hover" style="border: 1px solid black; width:100%;">
            <tr style="border: 1px solid black;">
                <td class="table-primary" style="border: .2px solid #5F5E61; text-align:center;">  Student Learning Outcomes</td>
                @for (int i = 0; i < Model.SLO_PI.Count(); i++)
                {
                    <td colspan=" @Model.SLO_PI.ElementAt(i).Value.Count()" style="border: .2px solid #5F5E61; text-align:center;">
                        @Model.SLO_PI.ElementAt(i).Key.SLOID
                    </td>
                }
            </tr>
            <tr>
                <td class="table-primary" style="border: .2px solid #5F5E61; text-align:center;"> PI</td>
                @for (int i = 0; i < Model.SLO_PI.Count(); i++)
                {
                    foreach (PI pi in Model.SLO_PI.ElementAt(i).Value)
                    {

                        <td style="border: .2px solid #5F5E61; text-align:center;">
                            @pi.ID
                        </td>

                    }
                }
            </tr>
        </table>
    </div>
}
else
{
    <h6> There is no Pi listed for this course yet</h6>
}




<div class="card bg-secondary mb-3" style="max-width: 20rem;">
    <div class="card-header"> <h5>Will This Course Be Assessed </h5></div>
    <div class="card-body">

        @if (Model.IsAssessed == null)
        {

            <h4>this has not been set up yet please fill the information</h4>
            <p class="card-text">
                <button id='open' class="card-link" data-toggle="modal" data-target="#isAssessed">Fill the Information </button>

            </p>

        }

        else if (Model.IsAssessed.isAssessed1 == true)
        {
            <h4 class="card-title">
                Yes this Course will be Assessed
                <button id='open' class="card-link" data-toggle="modal" data-target="#isAssessed">Edit </button>
            </h4>
            <p class="card-text">
            </p>

        }
        else
        {

            <h4 class="card-title">
                No
            </h4>


            <p class="card-text">
                Why Not:@Html.DisplayFor(model => model.IsAssessed.WhyNot)
                <br />
                <button id='open' class="card-link" data-toggle="modal" data-target="#isAssessed">Edit </button>

            </p>
        }



    </div>
</div>


<div id="isAssessed" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @{
                if (Model.CourseCoordinator.isAssessed == null)
                {
                    Html.RenderPartial("IsAssessed", new isAssessed()
                    {
                        CourseID = Model.CourseCoordinator.CourseID,
                        Year = Model.CourseCoordinator.Year,
                        Semseter = Model.CourseCoordinator.Semseter,
                        isAssessed1 = false
                    });
                }
                else
                {
                    Html.RenderPartial("IsAssessed", Model.IsAssessed);
                }
            }
        </div>
    </div>
</div>



<div class="card bg-secondary mb-3" style="max-width: 20rem;">
    <div class="card-header">Assessment Plan for the Student Learning Outcome</div>
    <div class="card-body">
        @if (Model.AssessmentPlan == null)
        {
            <p class="card-text">
                The Assessment Plan has not been set up yet
                <button id='open' class="card-link" data-toggle="modal" data-target="#addAssmentPlan">create Assessment plan for this semester</button>

            </p>

        }
        else
        {
            <p class="card-text">
                <ul>
                    @if (Model.AssessmentPlan.Midterm_Test)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Midterm_Test);
                        </li>
                    }

                    @if (Model.AssessmentPlan.Final_Exam)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Final_Exam);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Quiz)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Quiz);
                        </li>
                    }

                    @if (Model.AssessmentPlan.Assignment)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Assignment);
                        </li>
                    }

                    @if (Model.AssessmentPlan.project)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.project);
                        </li>
                    }


                    @if (Model.AssessmentPlan.Written_Report)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Written_Report);
                        </li>
                    }   @if (Model.AssessmentPlan.Oral_Presenation)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Oral_Presenation);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Practice_In_The_Lab)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Practice_In_The_Lab);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Case_Studdy)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Case_Studdy);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Coruse_Assessment_Survey_By_Students)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Coruse_Assessment_Survey_By_Students);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Gropu_Discussions)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Gropu_Discussions);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Students_Interviews)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Students_Interviews);
                        </li>
                    }
                    @if (Model.AssessmentPlan.Other != null)
                    {
                        <li>
                            @Html.DisplayNameFor(model => model.AssessmentPlan.Other);
                            @Html.DisplayFor(model => model.AssessmentPlan.Other);
                        </li>
                    }
                </ul>
                <button id='open' class="card-link" data-toggle="modal" data-target="#addAssmentPlan">Edite the  Assessment plan for this semester</button>

            </p>

        }


    </div>
</div>






<div id="addAssmentPlan" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document" style="width:auto;">
        <div class="modal-content" style="width:auto;">
            @{
                if (Model.AssessmentPlan == null)
                {
                    Html.RenderPartial("AssessmentPlan", new AssessmentPlanforTheStudentLearningOutcomeTechnique()
                    {
                        CourseID = Model.CourseCoordinator.CourseID,
                        Year = Model.CourseCoordinator.Year,
                        Semester = Model.CourseCoordinator.Semseter,
                        Midterm_Test = false,
                        Final_Exam = false,
                        Quiz = false,
                        Assignment = false,
                        project = false,
                        Written_Report = false,
                        Oral_Presenation = false,
                        Practice_In_The_Lab = false,
                        Case_Studdy = false,
                        Coruse_Assessment_Survey_By_Students = false,
                        Gropu_Discussions = false,
                        Students_Interviews = false
                    });
                }
                else
                {
                    Html.RenderPartial("AssessmentPlan", Model.AssessmentPlan);
                }
            }
        </div>
    </div>
</div>
